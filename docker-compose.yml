services:
  frontend:
    image: nginx
    container_name: "frontend"
    ports:
      - 80:80
    restart: always
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf

  patrik-move:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.11
        WORKDIR /code
        COPY  ./patrik-move/requirements.txt /code/requirements.txt
        RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt
        CMD ["fastapi", "run", "app/main.py", "--port", "80"]
    container_name: patrik-move
    restart: always
    volumes:
     - ./patrik-move/app:/code/app
    devices:
    - "/dev/ttyUSB0:/dev/ttyUSB0"

  patrik-ui:
    image: joseluisq/static-web-server:2-alpine
    container_name: patrik-ui
    restart: always
    environment:
      - SERVER_ROOT=/var/public
      - SERVER_CONFIG_FILE=/etc/config.toml
    volumes:
      - ./patrik-ui:/var/public
      - ./patrik-ui/config.toml:/etc/config.toml

  patrik-camera:
    container_name: patrik-camera
    restart: always
    ports:
      - 8081:8081
      - 8765:8765
    image: ccrisan/motioneye:master-armhf
    devices:
      - "/dev/video0:/dev/video0"
      - "/dev/video1:/dev/video1"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /patrik-camera:/etc/motioneye

  patrik-say:
    container_name: patrik-say
    ports:
      - 9001:9001
    build:
      dockerfile_inline: |
        FROM python:3.11
        RUN apt update
        RUN apt install -y pulseaudio ffmpeg libavcodec-extra
        RUN export PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
        WORKDIR /code
        COPY ./patrik-say/requirements.txt /code/requirements.txt
        RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt
        CMD ["fastapi", "run", "app/main.py", "--port", "9001"]
    volumes:
      - ./patrik-say/app:/code/app
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
    environment:
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
    devices:
      - /dev/snd:/dev/snd 
    restart: always

  patrik-tts:
    image: ghcr.io/aculeasis/rhvoice-rest:latest
    container_name: patrik-tts
    ports:
      - 8080:8080 
    restart: always

  patrik-face:
      build:
        context: .
        dockerfile_inline: |
          FROM python:3.11
          WORKDIR /code
          COPY  ./patrik-face/requirements.txt /code/requirements.txt
          RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt
          CMD ["fastapi", "run", "app/main.py", "--port", "80"]
      container_name: patrik-face
      ports:
      - 8888:80
      restart: always
      volumes:
      - ./patrik-face/app:/code/app

  patrik-pyside6:
    stop_signal: SIGKILL
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.11

        RUN adduser --quiet --disabled-password qtuser
        RUN apt update && apt install -y \
          libxcb-cursor-dev \
          libxcb-cursor0 \
          libxkbfile-dev \
          libasound2 \
          libxtst6 \
          libxrandr2 \
          libxdamage1 \
          libnss3 \
          libxcomposite-dev \
          libgl1-mesa-glx \
          libegl1-mesa \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-render0 \
          libxcb-shape0 \
          libxcb-sync1 \
          libxcb-xfixes0 \
          libxcb-xinerama0 \
          libxcb-xkb1 \
          libxcb1 \
          libxrender1 \
          libxi6 \
          libdbus-1-3 \
          libxcb-cursor0 \
          libegl1 \  
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

        WORKDIR /code
        COPY  ./patrik-pyside6/requirements.txt /code/requirements.txt
        RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt
        CMD ["python", "app/main.py"]

    container_name: patrik-pyside6
    depends_on:
      - patrik-face
    user: qtuser
    restart: always
    environment:
      - DISPLAY=$DISPLAY
      # - QTWEBENGINE_CHROMIUM_FLAGS="--enable-logging --log-level=0"
      # - ENV QT_DEBUG_PLUGINS=1
      # - ENV QT_QPA_PLATFORM=xcb
      # - ENV QTWEBENGINE_DISABLE_SANDBOX=1
      # - QT_X11_NO_MITSHM=1
      # - LIBGL_ALWAYS_INDIRECT=0
      # - XDG_RUNTIME_DIR=/tmp
      # - XDG_SESSION_TYPE=x11
    volumes:
      - ./patrik-pyside6/app:/code/app
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /dev/dri:/dev/dri